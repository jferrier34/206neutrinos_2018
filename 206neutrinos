#!/usr/bin/python3
import sys
from math import *

def neutrinos(n, a, h, sd, arg):

    s = n * a
    sc = (sd**2 + a**2) * n

    n += 1
    a = (s + arg) / n
    q =  sqrt((sc + arg**2) / n)
    h = n / (1 / arg + (n - 1) / h)
    sd = sqrt((sc + arg**2) / n - a**2)
    print_result(n, sd, a, q, h)
    return n, a, h, sd

def print_result(n, sd, a, q, h):
    print("\tNumber of values:\t%d" % n)
    print("\tStandard deviation:\t%.2f" % sd)
    print("\tArithmetic mean:\t%.2f" % a)
    print("\tRoot mean square:\t%.2f" % q)
    print("\tHarmonic mean:\t\t%.2f\n" % h)

def do_all():
    n = float(sys.argv[1])
    a = float(sys.argv[2])
    h = float(sys.argv[3])
    sd = float(sys.argv[4])
    tmp = 0.0
    while(1):
        print("Enter next value: ", end='')
        user = input()
        if (user == "END"):
            exit(0)
        try:
            tmp = float(user)
        except:
            print("only number")
            exit(84)
        n, a,h ,sd  = neutrinos(n, a, h, sd, tmp)
        
        

def help():
    print("USAGE\n\t./206neutrinos n a h sd\n")
    print("DESCRIPTION\n\tn\tnumber of values")
    print("\ta\tarithmetic mean")
    print("\th\tharmonic mean")
    print("\tsd\tstandard deviation")
    exit(0)

def check_error():
    if (sys.argv[1] == "-h"):
        help()
    if (len(sys.argv) != 5):
        exit(84)
    try:
        n = float(sys.argv[1])
        a = float(sys.argv[2])
        h = float(sys.argv[3])
        sd = float(sys.argv[4])
    except:
        exit(84)
    if (n < 0 or a < 0 or h < 0 or sd < 0):
        exit(84)

def main():
    if (len(sys.argv) < 2):
        exit(84)
    check_error()
    do_all()

if __name__ == '__main__':
    main()